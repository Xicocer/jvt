// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id  BigInt  @id @default(autoincrement()) @db.BigInt
  first_name  String @db.VarChar(50)
  last_name String  @db.VarChar(50)
  patronymic  String? @db.VarChar(50)
  email String @unique 
  password  String @db.Text
  img String? @db.Text
  created_at DateTime @default(now())
  MapMarkers MapMarkers[]
  user_pets user_pets[]
  messages messages[]
}

model MapMarkers{
  id BigInt @id @default(autoincrement()) @db.BigInt
  name String @db.Text
  type String @db.VarChar(30)
  address String @db.Text
  latitube Decimal @db.Decimal(9,6)
  longitube Decimal @db.Decimal(9,6)
  img String? @db.Text
  user User? @relation(fields: [user_id], references: [id])
  user_id BigInt?
  created_at DateTime @default(now())
}

model user_pets{
  id BigInt @id @default(autoincrement()) @db.BigInt
  name String @db.Text
  age Int @db.TinyInt
  gender Boolean
  user User? @relation(fields: [user_id], references: [id])
  user_id BigInt?
  breed breed[]
  pet pet[]
}

model pet{
  id BigInt @id @default(autoincrement()) @db.BigInt
  name String @db.Text
  breed breed[]
  user_pets user_pets? @relation(fields: [user_pets_id], references: [id])
  user_pets_id BigInt?
}

model breed{
  id BigInt @id @default(autoincrement()) @db.BigInt
  name String @db.Text
  pet pet? @relation(fields: [pet_id], references: [id])
  pet_id BigInt?
  user_pets user_pets? @relation(fields: [user_pets_id], references: [id])
  user_pets_id BigInt?
}

model chat{
  id BigInt @id @default(autoincrement()) @db.BigInt
  name String @db.Text
  type Boolean
  messages messages[]
}


model messages{
  id BigInt @id @default(autoincrement()) @db.BigInt
  content String @db.Text
  user User? @relation(fields: [user_id], references: [id])
  user_id BigInt?
  chat chat? @relation(fields: [chat_id], references: [id])
  chat_id BigInt?
}
